/*
 * THIS FILE IS AUTOMATICALLY GENERATED.  EDIT psych_scalar_scanner.rl INSTEAD
 *
 * To compile:      ragel -L psych_scalar_scanner.rl
 * To generate svg: ragel -V -p psych_scalar_scanner.rl | dot -Tsvg -o psych_scalar_scanner.svg
 */

%%{
  machine psych_scalar_scanner;

  ###
  # Actions
  action on_null_value      { return(rb_funcall(self, id_parse_null_value,      1, string)); }
  action on_bool_true       { return(rb_funcall(self, id_parse_bool_true,       1, string)); }
  action on_bool_false      { return(rb_funcall(self, id_parse_bool_false,      1, string)); }
  action on_int_base_2      { return(rb_funcall(self, id_parse_int_base_2,      1, string)); }
  action on_int_base_8      { return(rb_funcall(self, id_parse_int_base_8,      1, string)); }
  action on_int_base_10     { return(rb_funcall(self, id_parse_int_base_10,     1, string)); }
  action on_int_base_16     { return(rb_funcall(self, id_parse_int_base_16,     1, string)); }
  action on_int_base_60     { return(rb_funcall(self, id_parse_int_base_60,     1, string)); }
  action on_float_base_10   { return(rb_funcall(self, id_parse_float_base_10,   1, string)); }
  action on_float_base_60   { return(rb_funcall(self, id_parse_float_base_60,   1, string)); }
  action on_float_inf       { return(rb_funcall(self, id_parse_float_inf,       1, string)); }
  action on_float_nan       { return(rb_funcall(self, id_parse_float_nan,       1, string)); }
  action on_time_ymd        { return(rb_funcall(self, id_parse_time_ymd,        1, string)); }
  action on_time_full       { return(rb_funcall(self, id_parse_time_full,       1, string)); }
  action on_symbol_quoted   { return(rb_funcall(self, id_parse_symbol_quoted,   1, string)); }
  action on_symbol_unquoted { return(rb_funcall(self, id_parse_symbol_unquoted, 1, string)); }
  action on_string          { return(rb_funcall(self, id_parse_string,          1, string)); }

  ###
  # Null - http://yaml.org/type/null.html
  null_value = ('~'|'null'|'Null'|'NULL') %on_null_value ;

  ###
  # Boolean - http://yaml.org/type/bool.html
  bool_true  = ('yes'|'Yes'|'YES'|'true'|'True'|'TRUE'|'on'|'On'|'ON') %on_bool_true ; # NOTE: 'y'|'Y' removed from YAML spec
  bool_false = ('no'|'No'|'NO'|'false'|'False'|'FALSE'|'off'|'Off'|'OFF') %on_bool_false ; # NOTE: 'n'|'N' removed from YAML spec

  bool = bool_true | bool_false ;

  ###
  # Integer - http://yaml.org/type/int.html
  int_base_2  = [\-+]?'0b'[0-1_]+ %on_int_base_2 ;
  int_base_8  = [\-+]?'0'[0-7_]+ %on_int_base_8 ;
  int_base_10 = [\-+]?('0'|[1-9][0-9_,]*) %on_int_base_10 ; # NOTE: comma not in YAML spec
  int_base_16 = [\-+]?'0x'[0-9a-fA-F_,]+ %on_int_base_16 ; # NOTE: comma not in YAML spec
  int_base_60 = [\-+]?[0-9][0-9_]*(':'[0-5]?[0-9])+ %on_int_base_60 ; # NOTE: YAML spec has leading digit as [1-9]

  int = int_base_2 | int_base_8 | int_base_10 | int_base_16 | int_base_60 ;

  ###
  # Float - http://yaml.org/type/float.html
  float_base_10 = [\-+]?([0-9][0-9_,]*)?'.'[0-9]*([eE][\-+][0-9]+)? %on_float_base_10 ; # NOTE: comma not in YAML spec; dot removed from [0-9.] after initial decimal point
  float_base_60 = [\-+]?[0-9][0-9_]*(':'[0-5]?[0-9])+'.'[0-9_]* %on_float_base_60 ;
  float_inf     = [\-+]?'.'('inf'|'Inf'|'INF') %on_float_inf ;
  float_nan     = '.'('nan'|'NaN'|'NAN') %on_float_nan ;

  float = float_base_10 | float_base_60 | float_inf | float_nan ;

  ###
  # Time - http://yaml.org/type/timestamp.html
  time_ymd  = [0-9][0-9][0-9][0-9]'-'('1'[012]|'0'[0-9]|[0-9])'-'([12][0-9]|'3'[01]|'0'[0-9]|[0-9]) %on_time_ymd ;
  # NOTE: YAML spec originally [0-9][0-9][0-9][0-9]'-'[0-9][0-9]'-'[0-9][0-9]
  #   - Individual date portions were made more explicit

  time_full = [0-9][0-9][0-9][0-9]'-'[0-9][0-9]?'-'[0-9][0-9]?([Tt]|[ \t]+)[0-9][0-9]?':'[0-9][0-9]':'[0-9][0-9]('.'[0-9]*)?([ \t]*('Z'|[\-+][0-9][0-9]?(':'?[0-9][0-9])?))? %on_time_full ;
  # NOTE: YAML spec originally [0-9][0-9][0-9][0-9]'-'[0-9][0-9]?'-'[0-9][0-9]?([Tt]|[ \t]+)[0-9][0-9]?':'[0-9][0-9]':'[0-9][0-9]('.'[0-9]*)?(([ \t]*)'Z'|sign[0-9][0-9]?(':'[0-9][0-9])?)? %on_time_full ;
  #   - Spacing before time zone was moved to not only be before Z, but to also
  #     be before the numeric time zone.
  #   - Colon in time zone made optional

  time = time_ymd | time_full;

  ###
  # Symbol
  symbol_quoted   = ':'['"] @on_symbol_quoted ; #'
  symbol_unquoted = ':'[^'"] @on_symbol_unquoted ; #'

  symbol = symbol_quoted | symbol_unquoted ;


  main := (null_value | bool | int | float | time | symbol) $!on_string ;
  write data;
}%%


#include <psych.h>

VALUE cPsychScalarScanner;
ID id_parse_null_value;
ID id_parse_bool_true;
ID id_parse_bool_false;
ID id_parse_int_base_2;
ID id_parse_int_base_8;
ID id_parse_int_base_10;
ID id_parse_int_base_16;
ID id_parse_int_base_60;
ID id_parse_float_base_10;
ID id_parse_float_base_60;
ID id_parse_float_inf;
ID id_parse_float_nan;
ID id_parse_time_ymd;
ID id_parse_time_full;
ID id_parse_symbol_quoted;
ID id_parse_symbol_unquoted;
ID id_parse_string;

static VALUE ss_raw_tokenize(VALUE self, VALUE string)
{
  int cs;
  char* p = StringValuePtr(string);
  char* pe = p + RSTRING_LEN(string);
  char* eof = pe;

  %% write init;
  %% write exec;

  return string;
}

void Init_psych_scalar_scanner()
{
    VALUE psych         = rb_define_module("Psych");
    cPsychScalarScanner = rb_define_class_under(psych, "ScalarScanner", rb_cObject);

    rb_define_private_method(cPsychScalarScanner, "raw_tokenize", ss_raw_tokenize, 1);

    id_parse_null_value      = rb_intern("parse_null_value");
    id_parse_bool_true       = rb_intern("parse_bool_true");
    id_parse_bool_false      = rb_intern("parse_bool_false");
    id_parse_int_base_2      = rb_intern("parse_int_base_2");
    id_parse_int_base_8      = rb_intern("parse_int_base_8");
    id_parse_int_base_10     = rb_intern("parse_int_base_10");
    id_parse_int_base_16     = rb_intern("parse_int_base_16");
    id_parse_int_base_60     = rb_intern("parse_int_base_60");
    id_parse_float_base_10   = rb_intern("parse_float_base_10");
    id_parse_float_base_60   = rb_intern("parse_float_base_60");
    id_parse_float_inf       = rb_intern("parse_float_inf");
    id_parse_float_nan       = rb_intern("parse_float_nan");
    id_parse_time_ymd        = rb_intern("parse_time_ymd");
    id_parse_time_full       = rb_intern("parse_time_full");
    id_parse_symbol_quoted   = rb_intern("parse_symbol_quoted");
    id_parse_symbol_unquoted = rb_intern("parse_symbol_unquoted");
    id_parse_string          = rb_intern("parse_string");
}

/* vim: set noet sws=4 sw=4: */
